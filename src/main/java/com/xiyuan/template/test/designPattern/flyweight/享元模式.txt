共享对象，避免重复创建
flyweight是轻量级的意思，指的是拳击比赛中选手体重最轻的等级。顾名思义，享元设计模式就是为了是对象更轻。
不过这里的轻的描述与现实中不一样。对于对象来说，重的对象代表对象占有的内存大，轻的对象代表对象内存占用小。
当我们需要大量对象的时候，使用new关键字来分配内存，就会消耗大量的空间。
享元模式和单例模式有点像。
当我们需要某个实例的时候，我们并不是总是new一个新的实例出来，而是看看是不是内存中已经有相应的实例了，
如果已经有了，就直接从内存中取出那个实例来用，如果没有，才会new一个出来。
如果读者熟悉spring框架的话，也许会想到，spring的依赖注入机制，对于实现具体逻辑处理的service对象，并不需要读者显示的去new，
因为那样可能由于开发者的不规范的new对象操作，导致出现很多重复的对象，浪费对象，而是直接在配置文件里设置或者标注，
spring就会自动帮我new一个相应对象，而且只会存在一个，这样使用的时候直接使用就可以了，不仅帮我们解决了创建对象的过程，
而且避免了生成过多对象。虽然依赖注入机制并不是使用的flyweight模式，但思想上会有相似之处。

作者：chi633
链接：https://juejin.im/post/5a3b3c00f265da43133d505a
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。